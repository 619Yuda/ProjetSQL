-- 1 Ecrire la fonction FinValidite qui calcule la date de fin de validité de l’adhésion d’un membre dont le numéro est passé en paramètre.

CREATE OR REPLACE FUNCTION FinValidite(numero_membre IN INTEGER) RETURN SYSDATE IS  
	duree INTEGER := (SELECT duree FROM Membre M WHERE M.numero_membre = numero_membre);
	date_debut_validite SYSDATE := (SELECT date_adhere FROM Membre M WHERE M.numero_membre = numero_membre);
	date_fin_validite SYSDATE;
BEGIN  
	date_fin_validite := date_debut validite + INTERVAL duree month from DUAL; 
	Return date_fin_validite;  
END; 

-- 2 Ecrire la fonction AdhesionAjour qui retourne une valeur booléenne afin de savoir si un membre peut ou non effectuer des locations.

CREATE OR REPLACE FUNCTION AdhesionAjour(numero_membre IN INTEGER) RETURN BOOLEAN IS  
	duree INTEGER := (SELECT duree FROM Membre M WHERE M.numero_membre = numero_membre);
	date_debut_validite SYSDATE := (SELECT date_adhere FROM Membre M WHERE M.numero_membre = numero_membre);
	date_fin_validite SYSDATE;
	location BOOLEAN;
BEGIN  
	date_fin_validite := date_debut validite + INTERVAL duree month from DUAL; 
	location := (date_fin_validite > SYSDATE FROM DUAL);
	Return location;  
END; 

-- 3 Ecrire la procédure RetourExemplaire qui accepte en paramètres un numéro d’ISBN et un numéro d’exemplaire afin d’enregistrer la restitution de l’exemplaire de l’ouvrage emprunté.

CREATE OR REPLACE FOUNCTION RetourExemplaire(isbn IN NUMERIC(10,0), exemplaire IN INTEGER) IS	
	numero_emprunt INTEGER :=(SELECT numero_emprunt FROM Emprunt E, Details D WHERE D.isbn = isbn and D.numero_exemplaire = exemplaire and E.numero_emprunt = D.numero_emprunt);
BEGIN
	UPDATE Emprunt E SET etat = 'RE'
	WHERE E.numero_emprunt = numero_emprunt;
	UPDATE Details D SET date_de_rendu = SYDATE FROM DUAL
	WHERE D.isbn = isbn and D.numero_exemplaire = exemplaire;
END;
